#### THIS FILE IS MANAGED BY AN AUTOMATED WORKFLOW ####

name: "Detect Secrets"

# https://github.com/Yelp/detect-secrets
# https://github.com/reviewdog/action-detect-secrets

on:
  # Disabled automated running as I'm not convinced in it's value.
  # pull_request:
  #   branches:
  #     - main
  #     - master
  #     - "!repo-sync/**"
  #     - "!renovate/**"
  #     - "!update/pre-commit-hooks/**"
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write
  checks: write

env:
  EXCLUDE_LINES: |
    --exclude-lines='CHECKSUM'
    --exclude-lines='MOCKING'
    --exclude-lines='GOOGLE_API_KEY'
    --exclude-lines='google-api-key'
    --exclude-lines='NODE_OPTIONS'
    --exclude-lines='http://localhost'
    --exclude-lines='#*tag=v'
    --exclude-lines='secrets*inherit'
  EXCLUDE_FILES: |
    --exclude-files='node_modules'
    --exclude-files='dist/*'
    --exclude-files='*secrets*baseline'

jobs:
  detect-secrets:
    name: "Detect Secrets in Code"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      #  Detect if .secrets.baseline exists and if so set the variable BASELINE to '--baseline .secrets.baseline'
      - name: "Set BASELINE variable if baseline exists"
        id: baseline
        run: |
          if [ -f .secrets.baseline ]; then
            echo "::set-output name=baseline::--baseline .secrets.baseline"
          fi

      - name: run detect-secrets
        uses: reviewdog/action-detect-secrets@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          fail_on_error: "true"
          level: warning
          detect_secrets_flags: "${{ env.EXCLUDE_FILES }} ${{ env.EXCLUDE_LINES }} ${{ steps.baseline.outputs.baseline }}"
#
#
# Allowlisting Secrets
#
# You can add exclude-lines as above that will apply to all repositories this runs against.
#
# It is also possible to disable detection for individual lines of code in case of false positives.
# To do this, add a comment at the end of the line with text `pragma: allowlist secret`
#
# public_key: |  # pragma: allowlist secret
#    gX69YO4CvBsVjzAwYxdG
#    yDd30t5+9ez31gKATtj4
#
# Or add a comment with the text `pragma: allowlist nextline secret` before the line.
# pragma: allowlist nextline secret
# public_key = gX69YO4CvBsVjzAwYxdG
#
# Baselines
# - To create a baseline file allowlisting the current secrets, run the following command:
#   detect-secrets scan <detect_secrets_flags here> > .secrets.baseline
#   e.g. detect-secrets scan --exclude-lines 'CHECKSUM' --exclude-lines 'MOCKING' > .secrets.baseline
#
# - To update an existing baseline file, run the following command:
# detect-secrets scan <detect_secrets_flags here> --baseline .secrets.baseline
#
# - To audit an existing baseline file, run the following command:
# detect-secrets audit .secrets.baseline
#
# For more information see https://github.com/Yelp/detect-secrets#quickstart
