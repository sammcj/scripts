#!/usr/bin/env bash
# this shell script takes an .xcarchive file generated by Xcode and converts it to an .ipa file
# which is then put on the Desktop

# define style vars here
bold=$(tput bold)
normal=$(tput sgr0)
red='\033[1;31m'
no_style='\033[0m'
ind='       '

# make sure the CODE_SIGNING_REQUIRED field of Xcode's SDKSettings.plist is set to NO
# this makes it so that we will not need to have a Developer Account to export an IPA
sudo plutil -replace DefaultProperties.CODE_SIGNING_REQUIRED -string NO /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/SDKSettings.plist

# if the script was not run with at least one argument, log an error and terminate the script
if [ $# -lt 1 ]; then
  echo -e "${red}ERROR: ${no_style}ipagen acknowledges only the first argument, which is the path of the .xcarchive file"
  echo "${ind}the proper call should look like this:"
  echo "${ind}${bold}$ ./ipagen.sh <path_to_file>${normal}"
  echo "${ind}simply drag the file to the terminal to substitute for ${bold}<path_to_file>${normal}"
  exit 1
fi

# if the directory is NOT found, then log an error and terminate the script.
# this is important because if the directory does not exist, shit hits the fan
if [ ! -d "$1" ]; then
  echo -e "${red}ERROR: ${no_style}the specified directory was not found"
  echo "${ind}terminating script"
  exit 1
fi

# check to make sure there isn't already a Payload folder that we might overwrite
if [ -d ~/Desktop/Payload ]; then
  echo -e "${red}ERROR: ${no_style}a Payload folder already exists in Desktop"
  echo "${ind}either rename or remove the folder before trying again"
  echo "${ind}terminating script"
  exit 1
fi

# cd to the arg1 directory
cd "$1" || exit

# $1 is the path to your .xcarchive file
# cd all the way to the directory containing the internal .app file

# if the Products directory exists, cd there
if [ ! -d Products ]; then
  echo -e "${red}ERROR: ${no_style}the Products directory was not found"
  echo "${ind}terminating script"
  exit 1
else
  cd Products || exit
fi

# if the Applications directory exists, cd there
if [ ! -d Applications ]; then
  echo -e "${red}ERROR: ${no_style}the Applications directory was not found"
  echo "${ind}terminating script"
  exit 1
else
  cd Applications || exit
fi

# set empty equal to result of running find . -type d -empty on current directory
empty=$(find . -type d -empty)

# if find . -type d -empty returns "." then there is nothing in the directory, which should not happen
if [ "$empty" == "." ]; then
  echo -e "${red}ERROR: ${no_style}the Applications directory was found to be empty"
  echo "${ind}try re-archiving the application"
  echo "${ind}terminating script"
  exit 1
fi

# set APPNAME to be the only file in the folder
APPNAME="$(ls)"

# the Desktop directory is configured to not be renamable, but this is to make the
# script bulletproof
if [ ! -d ~/Desktop ]; then
  echo -e "${red}ERROR: ${no_style}somehow did not find a Desktop directory"
  echo "${ind}terminating script"
  exit 1
fi

# move the app to the Desktop
mv "$APPNAME" ~/Desktop

# delete the archive as we do not need it anymore
# rm -r "$1"

# cd to the Desktop
cd ~/Desktop || exit

# create a folder called Payload
mkdir Payload

# move the .app to the new folder
mv "$APPNAME" Payload

# compress the Payload folder to a .zip folder called App
zip -r App.zip Payload

# final conversion from .zip to .ipa by simple renaming
mv App.zip App.ipa

# cleanup
rm -r Payload
